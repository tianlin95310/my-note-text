求数据类型
typeid(123).name() 求数据类型 


1.void
void 类型不能定义普通变量
void* 类型可以定义指针变量
int a = 3;
void *p = &a；语法没错误void*类型可以接受其他的类型,可以理解为万能数据类型
		任何指针都占有4个字节。4 * 8位=32位操作系统，管辖的内存由类型决定


void *p;	//p++;语法错误，因为他不像char*,int*,它的长度未知

2.bool
	1，bool类型（与java有点不同），是c++引入的
	2，非0为真，0为假，只有0和1两个值
	3，sizeof（bool）为1占用一个字节,与MFC的BOOL不同，BOOL占用4个字节
	4，bool b = 234;只要值不为0，内部将其处理为1.
	5，b = 3.14	内部的b不为3，vc6为4，是一个比较大的数，非0值会被处理为1；
	6, b = 0.0f     内部的b不为0，
	    1，通常用做判断条件，以及比赛双方的互换条件
		if(a)	非0为真
		if(a>0)
	    2，关系运算符的结果为bool类型，C语言的bool即为0或1，0为false，1为true。
		int b = 3<4;	b的值为1
		bool b = 3>4;	b的值为0
	
3.枚举类型
enum xx{a,b,c,d,e};
xx x;x占用4个字节
x = a;
x只能取a,b,c,d,e5个值，a,b,c,d,e的值为0,1,2,3,4；
枚举类型可以很方便的定义常量。

4,引用类型（引用的东西要对应一块内存）
1，不能是常量的引用
2,定义时就要初始化
3,引用专递以及引用返回
4,在MFC里可以灵活使用,相对于typedef（针对的是抽一类类型），而它更具体，
5,引用类型变量，他也是变量，具有生命周期