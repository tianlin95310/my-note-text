1,数组的定义
    数组应属于一种数据类型。（有数组指针的存在）类似char,int，char*,int*,sizeof（）;
    数组的每个元素都是变量，数组名为首地址，是一个指针常量，是这组连续空间的标志，
	它的值不能改，否则这组空间将丢失。
	a[0],0[a]都可以，后者是以前的用法

2，用法
    int a[3];定义时如果不初始化，必须要给长度，且长度是常量，这与Java不同。

    int a[3] = {1,2,3};定义时可以初始化全部的值，也可初始化部分的值，未被初始化的会初
			始化为0，赋全0用{0}即可，若有初始化{}，则{}里不能为空

    int a[] = {1,2,3,4};定义时初始化，不给长度，只给初始化序列，系统会自动算出长度。
			也可以添加长度，但Java里面不能在[]里写长度

3，数组指针

int m[] = {1,2,3};m是首地址，它指向1
typeid(&m).name == int (*)[3];&m它指向{1,2,3}整体中的1，虽然都指向1，但类型不同，强调整体。
	数组类型的指针，由此可见，数组也是一种数据类型

4，指针数组

int* a[5];每一个元素都是int*,假设每个元素都是一个一位数组，那么它可以看做一个二维数组

5，int *p;给他分配一组连续的空间，他可以看做成一位数组，位于堆区，内存更多。
	数组名不能被赋值，但指针变量可以，赋值后，两个指针都指向同一块堆区。
	这种数组越界会报错。

