#include <stdio.h>
#define DIM(x) sizeof(x) / sizeof(x[0])
#define SWAP(x, y) (x = (y + x) - (y = x))
#define MID(x, y, z) (y < x && x < z) ? x : (x < y && y < z ? y : z)

//希尔排序(Shell Sort): 是插入排序的一种。因D．L．Shell于1959年提出而得名。
//基本思想：
//先取一个小于数组长度n的整数d1(一般为n/2)作为第一个增量，把文件的全部记录
//分成d1个组.所有距离为dl的倍数的记录放在同一个组中。先在各组内进行直接插
//入排序；然后，取第二个增量d2<d1(一般为d1/2), 重复上述的分组和排序，直至
//所取的增量dt=1(dt<dt-l<…<d2<d1)，即所有记录放在同一组中进行直接插入排序为止。

//49, 38, 65, 97, 76, 13, 27
void ShellSort(int a[], int n)
{
	int k = n / 2;	//k值代表前文中的增量d值
	while (k >= 1)	//当增量k值变化到0，结束循环
	{
		for (int i = 0; i < n; i++) //将数组分成k组, 然后对每组进行直接插入排序.
		{
			for (int j = i+k; j < n; j += k)	//共进行 ? 趟插入
			{
				int m = j;
				while (m >= k && a[m] < a[m-k])	//短路表达式
				{
					SWAP(a[m], a[m-k]);	//比前一个小, 则与之交换
					m -= k;
				}
			}
		}
		k = k / 2;
	}
}

void main()
{
	int a[] = {49, 38, 65, 97, 76, 13, 27};

	ShellSort(a, DIM(a));

	for (int i = 0; i < DIM(a); i++)
	{
		printf("%d ", a[i]);
	}
	printf("\r\n");
}
