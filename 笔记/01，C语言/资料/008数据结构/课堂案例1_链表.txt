#include <stdio.h>
#include <string.h>
#include <malloc.h>

#define dim(x) sizeof(x) / sizeof(x[0])

struct tagStack {
	int iData;
	tagStack *pPrev;
};

struct tagNode {
	int iData;
	tagNode *pPrev;
	tagNode *pNext;
};

void main()
{
	tagStack AA = {11, NULL};
	tagStack BB = {22, &AA};
	tagStack CC = {33, &BB};
	tagStack DD = {44, &CC};
	tagStack EE = {55, &DD};

	tagStack *pTop = &EE;

//	return;

	tagNode A = {11};
	tagNode B = {22};
	tagNode C = {33};
	tagNode D = {44};
	tagNode E = {55};

	A.pPrev = NULL;
	A.pNext = &B;

	B.pPrev = &A;
	B.pNext = &C;

	C.pPrev = &B;
	C.pNext = &D;

	D.pPrev = &C;
	D.pNext = &E;

	E.pPrev = &D;	//NULL
	E.pNext = NULL;	//&D

	tagNode *pHead = &A;

	tagNode *pCurr = pHead;
	tagNode *pLast = NULL;
	while (pCurr != NULL)
	{
		pLast = pCurr;

		tagNode *pTemp = pCurr->pNext;
		pCurr->pNext = pCurr->pPrev;
		pCurr->pPrev = pTemp;

		pCurr = pLast->pPrev;
	}
	pHead = pLast;

	pCurr = pHead;
	while (pCurr != NULL)
	{
		printf("%d ", pCurr->iData);
		pCurr = pCurr->pNext;
	}
	printf("\r\n");
	return;

	int a[] = {23, 2, 3, 2323,43 , 56, 4, 44, 32, 67, 99};
	for (int i = 0; i < dim(a) - 1; i++)
	{
		int iPos = i + 1;
		int iMin = a[i];
		for (int j = i + 1; j < dim(a); j++)
		{
			if (a[j] < iMin)
			{
				iMin = a[j];
				iPos = j;
			}
		}
		a[i] = a[iPos] + a[i] - (a[iPos] = a[i]);
	}
	
	for (int m = 0; m < dim(a); m++)
	{
		printf("%d ", a[m]);
	}
	printf("\r\n");
}
