1,平时尽量使用PrepareStatement(),而不要使用Statement(),前者是后者的子集，前者比较安全，效率高

2,使用举例
		DBconnect jdbc = new DBconnect();
		String sql = "insert into message(mId,cId,cName,teacher,sId,sName,sTime,sContent,rTime,rContent)values(?,?,?,?,?,?,?,?,?,?)";
		try
		{
			Connection con = jdbc.getConnection();
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setInt(1, msg.getmId());
			ps.setInt(2, msg.getcId());
			ps.setString(3, msg.getcName());
			ps.setString(4, msg.getTeacher());
			ps.setInt(5, msg.getsId());
			ps.setString(6, msg.getsName());
			ps.setString(7, msg.getsTime());
			ps.setString(8, msg.getsContent());
			ps.setString(9, msg.getrTime());
			ps.setString(10, msg.getrContent());
			ps.executeUpdate();	//用ps来执行更新函数
			ps.close();
			con.close();
			jdbc.close();
		} catch (SQLException e)
		{
			e.printStackTrace();
		}

3，配合模糊查询的用法
public ArrayList<MusicVo> getByName(String name)
	{
		ArrayList<MusicVo> musics = new ArrayList<MusicVo>();
		
		DBUtils util = new DBUtils();
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		String sql = "select * from musics where sName like ?";
		
		try
		{
			con = util.getConnection();
			ps = con.prepareStatement(sql);
			
			// 使用PrepareStatement的sql语句内部不要用单引号，？他会匹配是否需要单引号
			ps.setString(1, "%" + name + "%");
			
			rs = ps.executeQuery();
		
			MusicVo music = null;
			while(rs.next())
			{
				music = new MusicVo();
				music.setName(rs.getString("sName"));
				music.setArtist(rs.getString("artist"));
				music.setSize(rs.getString("size"));
				music.setPath(rs.getString("path"));
				
				musics.add(music);
			}
		} catch (SQLException e)
		{
			e.printStackTrace();
		}
		finally {
			util.close(con, ps, rs);
		}
		
		System.out.println(musics.toString());
		return musics;
				
	}