1，abstract关键字用于定义抽象类

2，
abstract class a	（C语言不需要加abstract，有纯虚成员函数即为抽象类）
{
	private int a;			//可以有普通属性
	public void fun(){}		//可以有已定义的方法
	public abstract void fun1();	//可以有抽象方法，类的抽象方法需加abstract
}
					
3，
	1，抽象类可以没有抽象方法，如果类有抽象方法，那么它一定是抽象类
	2，非抽象类继承抽象类必须实现所有的抽象方法
	3，抽象类可以有普通的已实现的方法和普通变量
	4，抽象类不可以实例化对象，他有构造方法，但只是用于子类的实例化，与接口不同
	5，抽象类不能申明为final

4，其他特点

抽象类可以实现接口，可不用实现其抽象方法
接口不能继承抽象类
接口内部只能有抽象函数(1.8后可以有)
抽象类内部可以有抽象函数和具体函数，抽象函数不能是静态的,静态与常量很相似，静态函数要求不能存在不确定的定西

5，一种特殊情况
class A
{
	void fun(){}
}

abstract class B extends A
{
	// 重写时将它变成抽象的了，这是抽象类的特殊点
	@Override
	abstract void fun();
}

6，抽象类一般定义一组业务逻辑的规范，因为抽象类内部可以有已经实现的方法，我们
将该方法暴露给子类对象，该方法就是一个事件的一系列操作，操作的顺序要求不变，但实现的细节不一样，
那我们可以抽象操作，让子类重写，以此来实现封装一套规范