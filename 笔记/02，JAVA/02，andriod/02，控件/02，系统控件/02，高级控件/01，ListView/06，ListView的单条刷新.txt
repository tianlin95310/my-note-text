package com.example.listview;

import java.util.ArrayList;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.TextView;

public class MainActivity extends Activity
{
	ListView lv;
	
	ArrayList<String> list;
	
	MyAdapter adapter;
	
	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		lv = (ListView) findViewById(R.id.lv);
		
		list = new ArrayList<String>();
		
		adapter = new MyAdapter();
		for(int i = 0; i < 50; i++)
		{
			list.add(String.format("%02d", i));
		}
		
		lv.setAdapter(adapter);
		
	}

	public void add(View v)
	{
		// 方法1
//		adapter.add("666");
		
		// 方法2
		list.add("888");
		adapter = new MyAdapter();
		lv.setAdapter(adapter);
	}
	class MyAdapter extends BaseAdapter
	{

		@Override
		public int getCount()
		{
			return list.size();
		}

		// 添加后，内部应该是观察者模式，自动实现lv的更新
		public void add(String str)
		{
			list.add(str);
			notifyDataSetChanged();
		}
		@Override
		public Object getItem(int position)
		{
			return null;
		}
		@Override
		public long getItemId(int position)
		{
			return 0;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent)
		{
			
			if (convertView == null)
			{
				Log.d("my",
						"null" + "(" + position + "," + getItemId(position) + ")" + "，当前第一行"
								+ lv.getFirstVisiblePosition() + "当前最后一行，" + lv.getLastVisiblePosition());
			} else
			{
				Log.d("my",
						"" + convertView.toString() + "(" + position + "," + getItemId(position) + ")" + "当前第一行"
								+ lv.getFirstVisiblePosition() + "当前最后一行" + lv.getLastVisiblePosition());
			}
			
			// 虽然convertView不为空，但是一些这种写法并没有利用到convertView，所以不是一种好的写法
			View v = View.inflate(MainActivity.this, android.R.layout.simple_list_item_1, null);
			TextView tv = (TextView) v.findViewById(android.R.id.text1);
			tv.setText(list.get(position));
			return v;
		}
		
	}
}

