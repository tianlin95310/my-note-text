package tjuci.edu.dl;

import android.app.Activity;
import android.os.Bundle;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.animation.AnimationUtils;
import android.widget.ImageSwitcher;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.ViewSwitcher.ViewFactory;

public class GridAndImageSwitcherSampleActivity extends Activity
{
	// 图片的资源id
	int[] imagesId = { R.drawable.q1, R.drawable.q2, R.drawable.q3,
			R.drawable.q4, R.drawable.q5, R.drawable.q6, R.drawable.q7,
			R.drawable.q8, R.drawable.q9, R.drawable.q10, R.drawable.q11,
			R.drawable.q12 };

	// ImageSwitch控件
	ImageSwitcher imageSwitcher;

	// 目前图片的下标
	int index = 5;

	// 手势
	GestureDetector gesture;

	@Override
	public void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		imageSwitcher = (ImageSwitcher) findViewById(R.id.imageswitch);
		
		// ImageSwitcher的渐入渐出效果
		imageSwitcher.setInAnimation(AnimationUtils.loadAnimation(this,
				android.R.anim.fade_in));
		imageSwitcher.setOutAnimation(AnimationUtils.loadAnimation(this,
				android.R.anim.fade_out));
		
		// 设置图片切换效果
		imageSwitcher.setFactory(new ViewFactory()
		{
			@Override
			public View makeView()
			{
				ImageView iv = new ImageView(
						GridAndImageSwitcherSampleActivity.this);
				
				// 设置图片的放缩类型
				iv.setScaleType(ScaleType.CENTER_INSIDE);
				// setLayoutParams时使用的是ImageSwitcher的LayoutParams
				iv.setLayoutParams(new ImageSwitcher.LayoutParams(
						LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
				return iv;
			}
		});

		// 设置最先的Image
		imageSwitcher.setImageResource(imagesId[5]);

		gesture = new GestureDetector(this, new MySimpleGesture());
	}

	class MySimpleGesture extends GestureDetector.SimpleOnGestureListener
	{
		@Override
		public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
				float velocityY)
		{

			if (e1.getX() > e2.getX() + 50)
			{
				// 循环的设置图片
				imageSwitcher.setImageResource(imagesId[++index % imagesId.length]);

			} else if (e1.getX() + 50 < e2.getX())
			{
				index--;
				if(index == -1)
					index = imagesId.length - 1;
				imageSwitcher.setImageResource(imagesId[index]);
			}
			return super.onFling(e1, e2, velocityX, velocityY);
		}
	}

	@Override
	public boolean onTouchEvent(MotionEvent event)
	{
		return gesture.onTouchEvent(event);
	}

}