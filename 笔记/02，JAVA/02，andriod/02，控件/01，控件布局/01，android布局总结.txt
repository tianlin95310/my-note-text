1，相对布局：重叠式的，布局相互覆盖
    1，子布局的控件位置能通过其他属性设置彼此的相对位置，有below，toRightOf，align等等可以指定子控件
与子控件的相对位置，还可以通过带有parent的属性可以确定相对于父布局的位置，主动的都是在指定的空间内部
    2，另外，layout_gravity相对布局是没有的，gravity属性虽然有，但是没有效果
    3，综合来说，相对布局不能在父布局里直接指定子布局的位置

   
2，线性布局：线性分布
    1，可以在根布局里确定子布局的位置，即父布局的gravity属性可以。确定是所有的孩子都会这样
    2，假如父根布局是水平方向，子布局只能在水平方向进行比率划分，有时希望子布局最后渲染（注意是最后渲染），可以单独加一个权重。
    3，**** 在不是线性布局的布局里加该weight属性是没有用的（所以在相对布局想通过加权来最后渲染是没有用的）
    4，如父布局是水品方向的，用layout_gravity是不能指定在子布局在水品方向上的相对位置的，但可以指定竖直方向的

3，表格布局
    1，他跟表格布局很类似，类似于表格
    2，在两个方向上同时进行布局形成表格
    3，他也可以通过比率来确定子布局的长宽
    4，TableRoW用来定义一行，行内采用水平方向的线性布局

4，帧布局：重叠式的
    1，子布局是一层一层堆叠起来的，主要用于游戏场景设置
    2，与相对布局一样，是从左上角开始填充的，但他的子布局中layout_gravity是可以用的
    3，通过设置View的三个可见属性来改变显示的状态

5，决对布局
    1，控件的绝对坐标是明确的，已过时

所有布局的通用属性，间距的使用
1，margin	表示外间距，控件的边缘距离父布局边缘的距离，他是属于父布局的LayoutParam参数
	

2，padding	表示内间距，表示孩子的边缘距离控件控件自身的边缘距离，他是属于控件自身的LayoutParam参数

3，多个属性同时需要的话用用|分隔，或
android:gravity="bottom|center",
对于left与start的区别，start在中国是左边，在美国可能是右边