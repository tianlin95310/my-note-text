fitsSystemWindows 介绍

    根据官方文档，如果某个View 的fitsSystemWindows 设为true，那么该View的padding属性将由系统设置，用户在布局文件中设置的
    padding会被忽略。系统会为该View设置一个paddingTop，值为statusbar的高度。fitsSystemWindows默认为false。

    重要说明：

    只有将statusbar设为透明，或者界面设为全屏显示（设置View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN flag)时，fitsSystemWindows才会起作用。不然statusbar的空间轮不到用户处理，这时会由ContentView的父控件处理，如果用HierarchyView 工具查看，将会看到，ContentView的父控件的paddingTop将会被设置。
    如果多个view同时设置了fitsSystemWindows，只有第一个会起作用。这是一般情况，后面会介绍特殊情况。
    fitsSystemWindows属性的个性化

    第一次接触fitsSystemWindows是在CoordinatorLayout控件。发现有很多诡异的地方。

    fitsSystemWindows的表现和官方文档描述的不一样。
    有时CoordinatorLayout的子控件也会设置fitsSystemWindows属性，而且子控件的fitsSystemWindows也会有作用。
    这些令我很困惑，查了些资料之后找到了原因：设置paddingTop只是fitsSystemWindows属性的默认行为，View可以对fitsSystemWindows
    进行个性化。fuccccccccccccccck!!!!!!!!!

    CoordinatorLayout对fitsSystemWindows的个性化。API 21 以上可以通过调用View的setOnApplyWindowInsetsListener(OnApplyWindowInsetsListener)函数，改变fitsSystemWindows的默认行为。在OnApplyWindowInsetsListener的onApplyWindowInsets函数，可以决定如何处理statusbar的空间。
    重要说明：

    在API 21以前，好像也可以重写View的某个函数达到类似效果。
    必须将statusbar设为透明，或者界面设为全屏显示setOnApplyWindowInsetsListener才会起作用。这点很容易理解，你都没有statusbar空间，你个性化个屁啊。
