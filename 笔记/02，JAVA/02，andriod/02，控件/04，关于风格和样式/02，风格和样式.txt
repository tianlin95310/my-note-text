
// 1,风格定义

<resources>

    <!-- 使用自定义style时，如果用于控件的话，可以不用继承系统的style，但若用于application的话，
		就需要继承系统的,否则可能会有异常
    style，作用范围比较：application > activity > 控件，并且作用范围小的可以覆盖作用范围大的 -->
    
    <style name="myStyle" parent="Theme.AppCompat.Light">
        <item name="android:textColor">#ff0000</item>
        <item name="android:textSize">30sp</item>
    </style>

    <style name="myChildStyle" parent="myStyle">
        <item name="android:textColor">#00ff00</item>
    </style>
</resources>

// 2,application，activity用theme
<application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppBaseTheme" >
        <activity
            android:theme="@style/myChildStyle"
            android:name=".MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

// 3,控件使用style
<TextView
        
        style="@style/myStyle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="1111111111111" />

//4,风格定义举例
    <!-- 字符串不需要用双引号 -->
    <style name="myStyle">
        <item name="android:layout_width">@dimen/p_width</item>
        <item name="android:layout_weight">1</item>
        <item name="android:layout_height">@dimen/p_height</item>
        <item name="android:button">@null</item>
        <item name="android:gravity">center_horizontal</item>
        <item name="android:textColor">@color/textcolor</item>
        <item name="android:drawablePadding">@dimen/p_padding</item>
    </style>
