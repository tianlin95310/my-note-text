除以subscribe函数外的其他操作都是中间的订阅过程，只有subscribe
才是真正的消费过程，我们用observeOn来定义最终的观察者（订阅者）在那个线程来
处理消息，在 android中我们一般在主线程中处理最后的消息，subscribeOn是定义消息
的中间订阅过程，我们一般在子线程中完成。

所以在非消费过程(订阅中的传递过程)中，我们就让他在子线程完成，最终的消费过程（订阅者）在主线程完成，
并且只有具有消费过程（订阅者），前面的订阅过程才会开始运行

只有订阅过程走完，才会开始处理消费，这中间的线程通信Rxjava已经实现了