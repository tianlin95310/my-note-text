    组件运行在哪个进程中是在 manifest 文件里设置的，四大组件<activity>， <service>，<receiver>和<provider>
都有一个 process 属性来指定组件运行在哪个进程中。你可以通过设置这个属性，使得每个组件运行在它们自己的进程中，或者几个组件共享一个进程，或者不共享。你甚至可以设定位于不同的应用程序中的组件运行在同一个进程中――这两
个不同的应用程序需要由同一作者签名，并且分享同一个 linux 用户 ID， 
    <application>元素也有一个 process 属性，用来指定所有组件的默认属性。
所有的组件都在指定的进程中的主线程中实例化的，对组件的系统调用也是由主线程发出
的。 每个实例不会建立新的线程。 对系统调用进行响应的方法――比如负责报告用户动作的
View.onKeyDown()和后面讨论的组件生命周期通知函数――都是运行在这个主线程中的。
    这意味着当系统调用这个组件时，这个组件不能长时间的阻塞线程（比如说网络操作，循环
计算），因为这样会阻塞这个进程中其他组件，你可以将很耗时的任务分到其他的线程中。
当内存不足并且有其他更紧急的进程请求时， Android 系统可能结束一个进程，运行在这个
进程中的组件会被销毁，当用户重新打开这个应用程序时时，系统会重新启动这个进程。